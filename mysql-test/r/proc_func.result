#
# Testing CREATE PROCEDURE IF NOT EXISTS
#
DROP TABLE IF EXISTS t1;
DROP PROCEDURE IF EXISTS proc1;
CREATE TABLE t1 (id INT);
CREATE PROCEDURE proc1 (OUT cnt INT) BEGIN SELECT COUNT(*) INTO cnt FROM t1; END$$
CALL proc1(@cnt);
SELECT @cnt;
@cnt
0
INSERT INTO t1 VALUES (1), (2), (3);
CALL proc1(@cnt);
SELECT @cnt;
@cnt
3
CREATE PROCEDURE proc1 (OUT cnt INT) BEGIN SELECT COUNT(*) INTO cnt FROM t1; END$$
ERROR 42000: PROCEDURE proc1 already exists
CREATE PROCEDURE IF NOT EXISTS proc1 (OUT cnt INT) BEGIN SELECT COUNT(*) INTO cnt FROM t1; END$$
Warnings:
Note	1304	PROCEDURE proc1 already exists
DROP PROCEDURE proc1;
CREATE PROCEDURE IF NOT EXISTS proc1 (OUT cnt INT) BEGIN SELECT COUNT(*) INTO cnt FROM t1; END$$
INSERT INTO t1 VALUES (1), (2), (3);
CALL proc1(@cnt);
SELECT @cnt;
@cnt
6
DROP TABLE IF EXISTS t1;
DROP PROCEDURE IF EXISTS proc1;
#
# End of CREATE IF NOT EXISTS PROCEDURE
#
#
# Testing CREATE FUNCTION IF NOT EXISTS test
#
DROP FUNCTION IF EXISTS f1;
CREATE FUNCTION f1(str char(20))
RETURNS TEXT
RETURN CONCAT('Hello, ', str, '!');
SELECT f1('world');
f1('world')
Hello, world!
CREATE FUNCTION f1(str char(20))
RETURNS TEXT
RETURN CONCAT('Hello, ', str, '!');
ERROR 42000: FUNCTION f1 already exists
CREATE FUNCTION IF NOT EXISTS f1(str char(20))
RETURNS TEXT
RETURN CONCAT('Hello, ', str, '!');
Warnings:
Note	1304	FUNCTION f1 already exists
DROP FUNCTION f1;
CREATE FUNCTION IF NOT EXISTS f1(str char(20))
RETURNS TEXT
RETURN CONCAT('Hello, ', str, '!');
SELECT f1('world');
f1('world')
Hello, world!
DROP FUNCTION IF EXISTS f1;
#
# End of CREATE FUNCTION IF NOT EXISTS test
#
